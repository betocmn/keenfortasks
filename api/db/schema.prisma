// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider  = "postgres"
  url       = env("DATABASE_POOLING_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Account {
  id        Int      @id @default(autoincrement())
  name      String
  url       String?
  timezone  String   @default("Europe/London")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  Agent    Agent[]
  Schedule Schedule[]
  Task     Task[]
}

model Agent {
  id        Int      @id @default(autoincrement())
  accountId Int
  firstName String
  lastName  String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  Account  Account    @relation(fields: [accountId], references: [id])
  Schedule Schedule[]
}

model Schedule {
  id        String   @id @default(uuid())
  accountId Int
  agentId   Int
  startTime DateTime
  endTime   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  Account Account @relation(fields: [accountId], references: [id])
  Agent   Agent   @relation(fields: [agentId], references: [id])
  Task    Task[]
}

model Task {
  id         String   @id @default(uuid())
  accountId  Int
  scheduleId String
  startTime  DateTime
  duration   Int
  type       TaskType
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relationships
  Schedule Schedule @relation(fields: [scheduleId], references: [id])
  Account  Account  @relation(fields: [accountId], references: [id])
}

enum TaskType {
  break
  work
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String?
  lastName  String?
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
